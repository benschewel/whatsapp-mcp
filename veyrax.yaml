name: WhatsApp-MCP
description: "WhatsApp MCP server that allows interaction with WhatsApp messages and contacts"
base_image: golang:1.21-bullseye # Using Debian-based image instead of Alpine
project_directory: /app

# Install both Go and Python dependencies
install_command: |
  apt-get update && apt-get install -y python3 python3-pip ffmpeg gcc sqlite3 libsqlite3-dev
  cd whatsapp-bridge && go mod tidy && go mod download
  cd ../whatsapp-mcp-server && pip3 install -r requirements.txt

# Build the Go WhatsApp Bridge
build_command: |
  mkdir -p whatsapp-bridge/store
  cd whatsapp-bridge && CGO_ENABLED=1 go build -o whatsapp-bridge main.go

# Start both components with proper error handling
start_command: |
  # Start the Go bridge in the background
  cd whatsapp-bridge && CGO_ENABLED=1 ./whatsapp-bridge &
  BRIDGE_PID=$!
  echo "Started WhatsApp Bridge with PID: $BRIDGE_PID"
  
  # Wait for bridge to initialize and create necessary files
  echo "Waiting for WhatsApp Bridge to initialize..."
  sleep 10
  
  # Check if bridge is still running
  if ! kill -0 $BRIDGE_PID 2>/dev/null; then
    echo "WhatsApp Bridge failed to start. Check logs."
    exit 1
  fi
  
  # Start the Python MCP server in the foreground
  cd ../whatsapp-mcp-server && python3 main.py

# Environment variables
env:
  VEYRAX_API_KEY: config.VEYRAX_API_KEY
  CGO_ENABLED: "1"
  PYTHONUNBUFFERED: "1"